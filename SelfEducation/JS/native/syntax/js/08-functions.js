/*********************************************/
/*Функции.*/
// Функции нужны для многократного повторения программы.
// Функции являются основными строительными блоками программ.
// Функция объявляется ключевым словом functuion.
// Далее пишется название функции и ставятся скобки ().
// Скобки нужны для передачи параметров которые должны быть использованы в функции.
// Передавать параметры не обязательно.
// При вызове функции в скобках пишем аргументы.
// Тело функции заключается в фигурные скобки {}.
// Именование функции - важно помнить главное правило:
// название функции должно напрямую отражать задачу которую она выполняет.
// В моем примере функция называется showMessage() - она выводит сообщение (пусть и в консоль).
// Что касается назначения функциям задач, здесь есть тоже правило:
// Каждая функция может совершать сколько угодно действий, но задачу она должна выполнять только одну.
// То есть функция не должна конвертировать валюту и проверять корректность вводимого пользователем
// на сайте номера телефона.
// Мы создаем отдельно функцию для конвертации валют и отдельно для проверки данных.

// У данной функции есть 1 параметр - hello.
// Главным образом он служит для того чтобы в него передавались какие то значения
// и функция использовалась каждый раз уникальным образом.
var userName = "left-nail";

function showMessage(hello) {
	console.log(hello);
	userName = "left";
	console.log(userName);
	var a = 5;
}
// Для того чтобы вызвать функцию нужно написать ее название и поставить в конце ().
showMessage("Hello, friend!");
// В данном случае мы вызовем 2 раза одну и ту же функцию, но потому что там есть аргумент
// мы можем передавать в нее разные значения и каждый раз ее вызывая в консоль будет выводится новое сообщение.
showMessage("Hello again!");

// В функциях можно писать абсолютно любой код - ветвления, циклы, функции внутри функций и т.д.
// Если объявить переменную внутри функции она будет локальной и видна только внутри тела функции.
// Вызвать ее из вне не получится
console.log(a);// Uncaught ReferenceError: a is not defined
// При этом, переменные созданные за пределами функции будут доступны внутри функции.
// Их можно вызывать, проводить с ними манипуляции.
// Если изменить содержимое переменной внутри функции, оно так же изменится и в самой переменной созданной
// пределами.
// Но этого не произойдет если переменная которая была создана вне тела функции будет создана еще раз внутри
// функции с помощью ключевого слова var.
// Делать так хоть и можно но нельзя))) потому что это приведет к путанице в чтении кода и попытках
// разобраться что происходит в этом приложении.
console.log(userName);